# telegram_bot/bot_main.py
"""
Œ£-FDL::Telegram Resonant Agent
A civic interface layer for dialogue, alerts, and Gromada integration via Telegram.

"""

import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# Activate logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üîπ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GPT-FDL: –ù–û–í–ï–Ø-–±–æ—Ç.\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n"
        "/status ‚Äî —Ç–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è\n"
        "/resonance ‚Äî –∫–∞—Ä—Ç–∞ —Ä–µ–∑–æ–Ω–∞–Ω—Å–∞\n"
        "/gromada ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∞—à–µ–π –≥—Ä–æ–º–∞–¥—ã"
    )

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üåÄ –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞. –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ Œîœà: —É–º–µ—Ä–µ–Ω–Ω–æ–µ. –ê–≥–µ–Ω—Ç –æ–Ω–ª–∞–π–Ω.")

async def gromada(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üå± –ì—Ä–æ–º–∞–¥–∞: NOVEYA-MICROCOMMUNE\n–°–µ–∫—Ç–æ—Ä—ã: –í–æ–¥–∞, –ü–∏—â–∞, –ó–¥–æ—Ä–æ–≤—å–µ, –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ...")

if __name__ == '__main__':
    app = ApplicationBuilder().token("YOUR_TELEGRAM_BOT_TOKEN").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("status", status))
    app.add_handler(CommandHandler("gromada", gromada))

    print("ü§ñ Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
    app.run_polling()
